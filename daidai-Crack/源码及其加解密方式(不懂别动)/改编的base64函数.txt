function decode_base64(encoded_str)
    local function charToBinary(char)
        if char == "=" then
            return ""
        end
        local charIndex = string.find(base64_chars, char) - 1
        local binary = ""
        for i = 5, 0, -1 do
            binary = binary .. (charIndex >= 2^i and "1" or "0")
            charIndex = charIndex % 2^i
        end
        return binary
    end

    local function binaryToChar(binaryString)
        if #binaryString ~= 8 then
            return ""
        end
        local charCode = 0
        for i = 1, 8 do
            charCode = charCode * 2 + (binaryString:sub(i,i) == "1" and 1 or 0)
        end
        return string.char(charCode)
    end

    local binaryString = encoded_str:sub(2):gsub("[^" .. base64_chars .. "=]", ""):gsub(".", charToBinary)
    local decodedString = binaryString:gsub("%d%d%d?%d?%d?%d?%d?%d?", binaryToChar)

    return decodedString
end